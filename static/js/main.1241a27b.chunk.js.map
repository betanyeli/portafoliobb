{"version":3,"sources":["Components/HeaderTerminal.js","Components/NodeComponent.js","Components/Description.js","App.js","serviceWorker.js","index.js"],"names":["HeaderTerminal","react_default","a","createElement","className","dist_react_default","options","strings","autoStart","loop","NodeTerminal","_useState","useState","_useState2","Object","slicedToArray","key","setKey","_useState3","ThisIsMe","me","Tabs_default","justify","variant","id","activeKey","onSelect","event","Tab_default","eventKey","title","Container","Row","Col","xs","md","href","src","mdlinks","img","description","url","NoMoreCommunity","Pinterest","PopCornMovie","Description","profile","alt","NodeComponent","App","Components_HeaderTerminal","Components_Description","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1241a27b.chunk.js","sourcesContent":["import React from 'react'\nimport Typewriter from 'typewriter-effect';\nimport '../TerminalStyles.css';\n\nconst HeaderTerminal = () =>{\n    return(\n        <div className=\"header-terminal\">\n        <Typewriter\n        options={{\n          strings: ['¿Necesitas una Front End Developer?', 'Bienvenidx a mi Portafolio <3','Need a Front End Developer?', 'Welcome to my portfolio'],\n          autoStart: true,\n          loop: true,\n        }}\n      />\n      </div>\n    )\n\n}\nexport default HeaderTerminal;","import React, { useState } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport '../TerminalStyles.css';\nimport '../Contact.css';\nimport '../Skills.css';\nimport ThisIsMe from '../ThisIsMe.json'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction NodeTerminal() {\n\n  const [key, setKey] = useState('home');\n  const [me] = useState(ThisIsMe)\n\n  return (\n\n    <Tabs justify variant=\"tabs\" id=\"controlled-tab-example\" activeKey={key} onSelect={event => setKey(event)}>\n      <Tab eventKey=\"home\" title=\"💻Node:/c/users/About-me\">\n        <Container className=\"mt-4\">\n          <Row>\n            <Col xs={12} md={6}>\n              <div className=\"acronym\">\n                <p><b>B</b>ienvenido a mi Portafolio,</p>\n                <p><b>E</b>laborado en <i className=\"tech-skills\">JavaScript,</i></p>\n                <p><b>T</b>ambién con <i>React Js,</i></p>\n                <p><b>A</b>demás de <i>Css Styles,</i> </p>\n                <p><b>N</b>ODE, <i>Firebase y Git</i></p>\n                <p><b>Y</b> <i>Bootstrap con FlexBox Grid,</i></p>\n                <p><b>E</b>gresada de </p>\n                <p><b>Laboratoria</b></p>\n                <p><b>I</b>mpulsando a un mundo feliz</p>\n              </div>\n            </Col>\n            <Col xs={12} md={6}>\n              <div className=\"acronym\">\n                <p><b>B</b>usco nuevos desafíos,</p>\n                <p><b>R</b>elacionados con mis Tech Skills,</p>\n                <p><b>A</b>utodidacta al 100%, responsable y TeamWorking,</p>\n                <p><b>V</b>isionaria y</p>\n                <p><b>O</b>rganizada, Conóceme, estoy aquí!</p>\n              </div>\n\n              <div className=\"social-media\">\n                <a className=\"social\" href=\"https://www.linkedin.com/in/betanyeli-bravo/\"><span>LinkedIn</span></a>\n                <a className=\"social\" href=\"https://github.com/betanyeli\"><span>Github</span></a>\n                <a className=\"social\" href=\"mailto:betangelii@gmail.com\"><span>E-mail</span></a>\n                <a className=\"social\" href=\"https://github.com/betanyeli/portafoliobb/blob/master/src/cv.pdf\"><span>CV</span></a>\n                <a className=\"social\" href=\"tel:+56972801296\"><span>Tel</span></a>\n                <a className=\"social\" href=\"https://www.npmjs.com/~betanyeli\"><span>Npm</span></a>\n              </div>\n            </Col>\n          </Row>\n\n\n\n        </Container>\n\n\n      </Tab>\n      <Tab eventKey=\"skills\" title=\"💻Node:/c/users/Skills&&Projects\">\n        <Container>\n          <Row>\n            <Col xs={12}>\n              <div className=\"all\">\n              <div className=\"view view-tenth\">\n                  <img src={me.mdlinks.img} />\n                  <div className=\"mask\">\n                    <h2>BB-MDLinks</h2>\n                    <p>{me.mdlinks.description}</p>\n                    <a href={me.mdlinks.url} className=\"info\">Ver Más</a>\n                  </div>\n                </div>\n\n                <div className=\"view view-tenth\">\n                  <img src={me.NoMoreCommunity.img} />\n                  <div className=\"mask\">\n                    <h2>NoMoreCommunity</h2>\n                    <p>{me.NoMoreCommunity.description}</p>\n                    <a href={me.NoMoreCommunity.url} className=\"info\">Ver Más</a>\n                  </div>\n                </div>\n\n                <div className=\"view view-tenth\">\n                  <img src={me.Pinterest.img} />\n                  <div className=\"mask\">\n                    <h2>Pinterest</h2>\n                    <p>{me.Pinterest.description}</p>\n                    <a href={me.Pinterest.url} className=\"info\">Ver Más</a>\n                  </div>\n                </div>\n                <div className=\"view view-tenth\">\n                  <img src={me.PopCornMovie.img} />\n                  <div className=\"mask\">\n                    <h2>PopCornMovie</h2>\n                    <p>{me.PopCornMovie.description}</p>\n                    <a href={me.PopCornMovie.url} className=\"info\">Ver Más</a>\n                  </div>\n                </div>\n              </div>\n\n\n              \n\n                \n              \n            </Col>\n          </Row>\n        </Container>\n\n      </Tab>\n\n    </Tabs >\n  )\n}\n\n\nexport default NodeTerminal;\n","import React, { useState } from 'react'\nimport '../TerminalStyles.css'\nimport '../PhotoProfile.css'\nimport ThisIsMe from '../ThisIsMe.json'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport NodeComponent from './NodeComponent'\n\n\n\nconst Description = () => {\n  const me = ThisIsMe;\n  return (\n    <Container>\n      <Row className=\"pt-3\">\n        <Col xs={12} md={3}>\n          <div className=\"grid\">\n            <figure className=\"effect-steve\">\n              <img src={me.profile} alt=\"\"></img>\n              <figcaption>\n                <h2>Betanyeli <span> Bravo</span></h2>\n                <p>Front end developer && Técnico en Administración</p>\n              </figcaption>\n            </figure>\n\n\n          </div>\n\n          {/* <img className=\"profile-picture\" src={me.profile} alt=\"\"></img> */}\n\n        </Col>\n        <Col xs={12} md={9}>\n          <NodeComponent />\n\n        </Col>\n      </Row>\n\n\n\n    </Container>\n\n\n\n  )\n}\n\nexport default Description;","import React from 'react';\nimport './App.css';\n//import NodeComponent from './Components/NodeComponent'\nimport HeaderTerminal from './Components/HeaderTerminal'\nimport Description from './Components/Description'\nimport './TerminalStyles.css';\nimport { Container, Row, Col } from 'react-bootstrap'\n\n\n\nfunction App() {\n\n  return (\n\n\n    <Container className=\"App\">\n      <Row>\n        <Col>\n\n          <HeaderTerminal />\n\n          <Description />\n          {/* <NodeComponent /> */}\n        </Col>\n      </Row>\n    </Container>\n\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}